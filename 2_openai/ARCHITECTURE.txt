```
AUTOMATED EMAIL REPLY SYSTEM - ARCHITECTURE DIAGRAM
═══════════════════════════════════════════════════════════════════════════

                         ┌─────────────────────────────────┐
                         │     YOUR SALES SYSTEM           │
                         │   (Jupyter Notebook / App)      │
                         └──────────────┬──────────────────┘
                                        │
                                        │ 1. Send Tracked Email
                                        │    with Thread ID
                                        ↓
                         ┌─────────────────────────────────┐
                         │       SendGrid API              │
                         │   (Outbound Email Service)      │
                         └──────────────┬──────────────────┘
                                        │
                                        │ 2. Email Delivered
                                        │    to Recipient
                                        ↓
                         ┌─────────────────────────────────┐
                         │     RECIPIENT INBOX             │
                         │   (alice@techcorp.com)          │
                         └──────────────┬──────────────────┘
                                        │
                                        │ 3. Recipient Replies
                                        │
                                        ↓
                         ┌─────────────────────────────────┐
                         │   SendGrid Inbound Parse        │
                         │   (mx.sendgrid.net)             │
                         └──────────────┬──────────────────┘
                                        │
                                        │ 4. Webhook POST
                                        │    /webhook/inbound
                                        ↓
            ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
            ┃          YOUR WEBHOOK SERVER                   ┃
            ┃        (webhook_server.py)                     ┃
            ┃                                                ┃
            ┃  ┌──────────────────────────────────────────┐ ┃
            ┃  │   5. Parse Inbound Email                 │ ┃
            ┃  │   - Extract sender, body, subject        │ ┃
            ┃  │   - Identify thread from database        │ ┃
            ┃  └───────────────┬──────────────────────────┘ ┃
            ┃                  │                             ┃
            ┃                  ↓                             ┃
            ┃  ┌──────────────────────────────────────────┐ ┃
            ┃  │   6. Load Conversation History           │ ┃
            ┃  │   - Query SQLite database                │ ┃
            ┃  │   - Get all prior messages in thread     │ ┃
            ┃  └───────────────┬──────────────────────────┘ ┃
            ┃                  │                             ┃
            ┃                  ↓                             ┃
            ┃  ┌──────────────────────────────────────────┐ ┃
            ┃  │   7. AI Analysis & Reply Generation      │ ┃
            ┃  │   - Feed context to OpenAI Agent         │ ┃
            ┃  │   - Generate contextual response         │ ┃
            ┃  │   - Apply SDR persona & best practices   │ ┃
            ┃  └───────────────┬──────────────────────────┘ ┃
            ┃                  │                             ┃
            ┃                  ↓                             ┃
            ┃  ┌──────────────────────────────────────────┐ ┃
            ┃  │   8. Send Automated Reply                │ ┃
            ┃  │   - Use SendGrid API                     │ ┃
            ┃  │   - Include proper threading             │ ┃
            ┃  └───────────────┬──────────────────────────┘ ┃
            ┃                  │                             ┃
            ┃                  ↓                             ┃
            ┃  ┌──────────────────────────────────────────┐ ┃
            ┃  │   9. Update Database                     │ ┃
            ┃  │   - Save inbound message                 │ ┃
            ┃  │   - Save outbound reply                  │ ┃
            ┃  │   - Update conversation status           │ ┃
            ┃  └──────────────────────────────────────────┘ ┃
            ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
                                        │
                                        │ 10. Reply Sent
                                        │
                                        ↓
                         ┌─────────────────────────────────┐
                         │   SendGrid API (Outbound)       │
                         └──────────────┬──────────────────┘
                                        │
                                        │ 11. Email Delivered
                                        │
                                        ↓
                         ┌─────────────────────────────────┐
                         │   RECIPIENT INBOX               │
                         │   (Sees automated response!)    │
                         └─────────────────────────────────┘


═══════════════════════════════════════════════════════════════════════════

DATABASE SCHEMA:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

┌─────────────────────────────────────────────────────────────────────┐
│ CONVERSATIONS TABLE                                                 │
├─────────────────────────────────────────────────────────────────────┤
│ • thread_id (TEXT, PRIMARY KEY) - Unique conversation identifier   │
│ • recipient_email (TEXT) - Who we're emailing                      │
│ • recipient_name (TEXT) - Their name                               │
│ • status (TEXT) - active, replied, closed                          │
│ • created_at (TEXT) - When conversation started                    │
│ • last_updated (TEXT) - Last activity timestamp                    │
└─────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────┐
│ MESSAGES TABLE                                                      │
├─────────────────────────────────────────────────────────────────────┤
│ • id (INTEGER, AUTOINCREMENT) - Unique message ID                  │
│ • thread_id (TEXT, FOREIGN KEY) - Links to conversation            │
│ • direction (TEXT) - 'inbound' or 'outbound'                       │
│ • sender (TEXT) - Who sent this message                            │
│ • recipient (TEXT) - Who received this message                     │
│ • subject (TEXT) - Email subject line                              │
│ • body (TEXT) - Full email content                                 │
│ • timestamp (TEXT) - When message was sent/received                │
└─────────────────────────────────────────────────────────────────────┘

═══════════════════════════════════════════════════════════════════════

KEY COMPONENTS:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🌐 Flask Webhook Server (webhook_server.py)
   ├── Listens for SendGrid POST requests
   ├── Parses incoming email data
   ├── Orchestrates AI response flow
   └── Manages database interactions

🤖 AI Reply Agent (OpenAI Agents SDK)
   ├── Analyzes conversation context
   ├── Generates appropriate responses
   ├── Maintains professional SDR persona
   └── Follows ComplAI product guidelines

🗄️  SQLite Database (email_conversations.db)
   ├── Stores all conversation threads
   ├── Maintains full message history
   ├── Enables context retrieval
   └── Tracks conversation status

📧 SendGrid Integration
   ├── Inbound Parse - Receives replies
   ├── API - Sends emails
   ├── MX Records - Routes email to webhook
   └── Tracking - Monitors delivery

═══════════════════════════════════════════════════════════════════════

TIMING (Typical Response Flow):
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Recipient sends reply → 0ms
SendGrid receives → ~100ms
Webhook POST → ~200ms
Parse email → ~50ms
Database query → ~10ms
AI generation → ~2-5 seconds (depends on context length)
Send reply → ~200ms
Database save → ~10ms
━━━━━━━━━━━━━━━━━━━
TOTAL: ~3-6 seconds from reply to automated response! ⚡

═══════════════════════════════════════════════════════════════════════
```
